@model IEnumerable<CsiTest.Models.RandomNumber>

@{
    ViewBag.Title = "Random Numbers";
}
<row>
    <div class="col-sm-12">
        <h2>@ViewBag.Title</h2>
        <p>
            @Html.ActionLink("Create New", "New")
        </p>
    </div>
    <div class="col-sm-12">
        <p class="pull-right">
            <a class="btn btn-default"
               href="./RandomNumbers/Export"
               download="RandomNumbers.xml">
                <span class="glyphicon glyphicon-export" aria-hidden="true"></span>
                Export as XML
            </a>
        </p>
    </div>
</row>

<table class="table">
    <tr>
        <th class="col-md-2">
            @if (ViewBag.SortParm != "asc")
            {
                <a href="@Url.Action("Index", "RandomNumbers", new { sortOrder = "asc"})">
                    <span class="glyphicon glyphicon-arrow-up" aria-hidden="true"></span>
                </a>
            }
            else
            {
                <span class="glyphicon glyphicon-arrow-up text-danger" aria-hidden="true"></span>
            }
            @if (ViewBag.SortParm != "desc")
            {
                <a href="@Url.Action("Index", "RandomNumbers", new { sortOrder = "desc" })">
                    <span class="glyphicon glyphicon-arrow-down" aria-hidden="true"></span>
                </a>
            }
            else
            {
                <span class="glyphicon glyphicon-arrow-down text-danger" aria-hidden="true"></span>
            }
            @Html.DisplayNameFor(model => model.Millis)
        </th>
        <th class="col-md-8">
            @Html.DisplayNameFor(model => model.SortedNumbers)
        </th>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.Ascending)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Millis)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SortedNumbers)
            </td>
            <td>
                @if (item.Ascending)
                {
                    <span class="glyphicon glyphicon-arrow-up" aria-hidden="true">Ascending</span>
                }
                else
                {
                    <span class="glyphicon glyphicon-arrow-down" aria-hidden="true">Descending</span>
                }
            </td>
        </tr>
    }

</table>
@if (Model.Count() == 0)
{
    <div class="alert alert-info">
        <strong>No Records Found!</strong> There are currently no records in the database. @Html.ActionLink("Create New Record", "New")
    </div>
}
